<<<<<<< HEAD
    0  1  2    3  4  5    6  7  8 (col_id)

0  01 02 03   04 05 06   07 08 09
1  10 11 12   13 14 15   16 17 18
2  19 20 21   22 23 24   25 26 27

3  28 29 30   31 32 33   34 35 36
4  37 38 39   40 41 42   43 44 45
5  46 47 48   49 50 51   52 53 54

6  55 56 57   58 59 60   61 62 63
7  64 65 66   67 68 69   70 71 72
8  73 74 75   76 77 78   79 80 81
=======
    1  2  3    4  5  6    7  8  9 (col_id)

1  01 02 03   04 05 06   07 08 09
2  10 11 12   13 14 15   16 17 18
3  19 20 21   22 23 24   25 26 27

4  28 29 30   31 32 33   34 35 36
5  37 38 39   40 41 42   43 44 45
6  46 47 48   49 50 51   52 53 54

7  55 56 57   58 59 60   61 62 63
8  64 65 66   67 68 69   70 71 72
9  73 74 75   76 77 78   79 80 81
>>>>>>> 7f5e81ba39fa1b398b85d427f32459b3e539b184

row_id = division int(position/limit) + 1
col_id = reste de la division de position/limit
pour subgrid, on calcule un delta de colonne auquel on ajoute un delta de ligne:
    * si col_id % racine(taille_sudoku) => cas particulier, on prend le quotient, sinon on prend la division + 1
    * ensuite on regarde row_id (si > racine(taille_sudoku) et si = modulo => cas particulier et on retire 1 pour ne pas
     sauter un cran

posRow = (self._squareRoot * (subgridNumber // self._squareRoot)) + posInSubgrid // self._squareRoot
posCol = (self._squareRoot * (subgridNumber % self._squareRoot)) + (posInSubgrid % self._squareRoot)
